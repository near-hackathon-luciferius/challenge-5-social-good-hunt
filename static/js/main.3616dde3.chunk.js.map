{"version":3,"sources":["components/SignIn.jsx","components/Popup.jsx","layout.js","images/404.jpg","components/404.jsx","components/Dashboard.jsx","components/Publish.jsx","components/Overview.jsx","components/Donate.jsx","components/Register.jsx","App.js","index.js","config.js"],"names":["SignIn","signIn","small","onClick","Popup","props","className","handleClose","content","Layout","currentUser","signOut","clearMessage","message","id","pageWrapId","outerContainerId","to","floating","large","icon","fontSize","tooltip","accountId","NotFound","src","Image404","alt","width","style","margin","React","Component","Dashboard","version","Publish","onPublishDeed","onSubmit","autoComplete","autoFocus","label","required","type","Overview","contract","onCredit","useState","deeds","setDeeds","useEffect","a","get_deeds_count","count","social_deeds","creditor_id","from_index","limit","parseInt","result","console","log","splitArrayIntoChunksOfLen","fetchData","arr","len","chunks","i","n","length","push","slice","map","chunk","deed","proof","title","author","description","is_creditor","creditors","Donate","onDonate","defaultValue","max","min","step","Register","onRegister","require","BOATLOAD_OF_GAS","Big","times","toFixed","App","nearConfig","wallet","lastTransaction","provider","error","setMessage","registered","setRegistered","e","preventDefault","target","elements","fieldset","proof_prompt","title_prompt","description_prompt","disabled","add_deed","value","then","_","credit","storage_balance_bounds","balance_bounds","storage_deposit","account_id","registration_only","donation","donate","fetchRegistered","is_registered","isRegistered","decodeURI","window","history","pushState","location","origin","pathname","requestSignIn","contractId","contractName","methodNames","name","path","element","replace","index","getConfig","process","NEAR_ENV","keyStore","nearAPI","BrowserLocalStorageKeyStore","near","walletConnection","getAccountId","account","state","amount","balance","viewMethods","changeMethods","sender","connection","nearInitPromise","initContract","errorMessage","urlParams","URLSearchParams","search","has","get","ReactDOM","render","document","getElementById","CONTRACT_NAME","module","exports","env","networkId","nodeUrl","walletUrl","helperUrl","keyPath","HOME","masterAccount","Error"],"mappings":"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","file":"static/js/main.3616dde3.chunk.js","sourcesContent":["import React from 'react';\nimport { Button } from 'react-materialize';\n\nexport default function SignIn({signIn}) {\n  return (\n    <>\n      <header>\n                   <h1>Social Bounty Hunt Homepage</h1>\n      </header>\n      <Button small onClick={signIn}>Log in</Button>\n      <p>\n          This app was developed for the NEAR Spring hackathon. \n          In order to use the app you need to sign in with your NEAR wallet.\n      </p>\n    </>\n  );\n}\n","import React from \"react\";\r\n\r\nconst Popup = props => {\r\n  return (\r\n    <div className=\"popup-box\">\r\n      <div className=\"box\">\r\n        <span className=\"close-icon\" onClick={props.handleClose}>x</span>\r\n        {props.content}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Popup;","import React from 'react';\r\nimport { Link, Outlet } from 'react-router-dom'\r\nimport { slide as Menu } from 'react-burger-menu';\r\nimport { Button } from 'react-materialize';\r\nimport PropTypes from 'prop-types';\r\nimport AccountBalanceWalletIcon from '@mui/icons-material/AccountBalanceWallet';\r\nimport BrokenImageIcon from '@mui/icons-material/BrokenImage';\r\nimport Popup from './components/Popup';\r\n\r\nconst Layout = ({currentUser, signIn, signOut, clearMessage, message}) => {\r\n  return (\r\n    <div id=\"App\">\r\n        <Menu pageWrapId={ \"page-wrapper\" } outerContainerId={ \"App\" }>\r\n          <Link className=\"menu-item\" to=\"/\">\r\n            Home\r\n          </Link>\r\n\r\n          <Link className=\"menu-item\" to=\"/publish\">\r\n            Publish Deeds\r\n          </Link>\r\n\r\n          <Link className=\"menu-item\" to=\"/overview\">\r\n            Deed Feed\r\n          </Link>\r\n\r\n          <Link className=\"menu-item\" to=\"/donate\">\r\n            Donate\r\n          </Link>\r\n        </Menu>\r\n        <main id=\"page-wrapper\">\r\n          <Outlet/>\r\n        </main>\r\n        { currentUser\r\n          ? <Button onClick={signOut} floating large className='btn-login' icon={<AccountBalanceWalletIcon fontSize=\"medium\" />} tooltip={'Log out ' + currentUser.accountId + '.'} />\r\n          : <Button onClick={signIn} floating large className='btn-login' icon={<BrokenImageIcon fontSize=\"medium\" />} tooltip='Log in using NEAR wallet.' />\r\n        }        \r\n        {message && <Popup\r\n          content={<>\r\n            <b>A message for you</b>\r\n            <p>{message}</p>\r\n          </>}\r\n          handleClose={clearMessage}\r\n        />}\r\n    </div>\r\n  );\r\n};\r\n\r\nLayout.propTypes = {\r\n  currentUser: PropTypes.shape({\r\n    accountId: PropTypes.string.isRequired,\r\n    balance: PropTypes.string.isRequired\r\n  }),\r\n  signIn: PropTypes.func.isRequired,\r\n  signOut: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Layout;","export default __webpack_public_path__ + \"static/media/404.6fa35088.jpg\";","import React from 'react'\r\nimport Image404 from '../images/404.jpg';\r\n\r\nclass NotFound extends React.Component {\r\n   render() {\r\n      return <img src={Image404} alt=\"Nothing is here.\" \r\n                  width='900'\r\n                  style={{margin:'10em'}}/>;\r\n   }\r\n}\r\nexport default NotFound;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Dashboard = ({version, currentUser}) => {\r\n   return <>\r\n                 <header>\r\n                   <h1>NEAR Challenge #3 - Social Bounty Hunt - {version}</h1>\r\n                 </header>\r\n                  <p>\r\n                      This app was developed for the NEAR Spring hackathon.\r\n                  </p>\r\n                  <p>\r\n                      Here is how the app works. Everyone can publish the good social deeds they performed in order to earn DEED.\r\n                      They publish they social deed with a description and a proof (for now this must be a link to an image or gif).\r\n                      Others can now credit the social deed that was published. For each credit the author of the social deed gets\r\n                      rewarded with one DEED.\r\n                  </p>\r\n                  <p>\r\n                      DEED is a non-transferable and therefore non-tradable fungible token. Is represents the users social reputation\r\n                      for his good deeds. But there is a second utility to the token. Users can also donate NEAR to the app. When they\r\n                      do that, the donated NEAR is distributed to all DEED holders proprtional to they DEED amount. The donation itself\r\n                      will automatically create a new deed for the donator.\r\n                  </p>\r\n                  <p>\r\n                      They idea behind that was, that there are two kinds of users. Those who do good social deeds. Those who want to\r\n                      promote themselfs by donating. For example a new crypto project can donate to the app. With the donation the\r\n                      crypto project would get recognition from all users.\r\n                  </p>\r\n                  <p>\r\n                      Of course in a real world scenario all users must be KYCed in order to prevent gaming the system by creating a lot\r\n                      of new accounts and accumulating a lot of DEED.\r\n                  </p>\r\n                 <h5>Head over <Link className=\"menu-item\" to=\"/publish\">here</Link> to publish your first social \r\n                     deed. Or look at social deeds others have published so far <Link className=\"menu-item\" to=\"/overview\">here</Link>.\r\n                     Lastly you can <Link className=\"menu-item\" to=\"/donate\">donate</Link> NEAR to all DEED holders and automatically create a deed with that.\r\n                 </h5>\r\n             </>\r\n}\r\n\r\nDashboard.propTypes = {\r\n  version: PropTypes.string.isRequired,\r\n  currentUser: PropTypes.shape({\r\n    accountId: PropTypes.string.isRequired,\r\n    balance: PropTypes.string.isRequired\r\n  })\r\n};\r\n\r\nexport default Dashboard;","import React from 'react';\r\nimport { Button, TextInput } from 'react-materialize';\r\n\r\nexport default function Publish({onPublishDeed}) {\r\n  return (\r\n    <>\r\n      <header>\r\n                   <h1>Publish a social deed.</h1>\r\n      </header>\r\n      <form onSubmit={onPublishDeed}>\r\n        <fieldset id=\"fieldset\">\r\n            <p>Describe your social deed and provide prove in form of an image or a gif.</p>\r\n            <p>\r\n                When you hit Publish it is possible that there are two transaction to sign.\r\n                In this case your account is first registered with the contract in order for you to\r\n                receive the DEED tokens. In the current implementation the registration cancles the\r\n                actual publish which would need to be executed again after registration.\r\n            </p>\r\n            <p className=\"highlight\">\r\n            <TextInput\r\n                autoComplete=\"off\"\r\n                autoFocus\r\n                id=\"title_prompt\"\r\n                className=\"name_input\"\r\n                label=\"The title of your deed.\"\r\n                required\r\n            />\r\n            </p>\r\n            <p className=\"highlight\">\r\n            <TextInput\r\n                autoComplete=\"off\"\r\n                id=\"description_prompt\"\r\n                className=\"name_input\"\r\n                label=\"A short description of the deed.\"\r\n                required\r\n            />\r\n            </p>\r\n            <p className=\"highlight\">\r\n            <TextInput\r\n                autoComplete=\"off\"\r\n                id=\"proof_prompt\"\r\n                className=\"name_input\"\r\n                label=\"An URL to an image or of gif as prove of the deed.\"\r\n                required\r\n            />\r\n            </p>\r\n            <Button type=\"submit\" small\r\n                    tooltip=\"Publishes the social deed to the blockchain.\">\r\n            Publish\r\n            </Button>\r\n        </fieldset>\r\n      </form>\r\n    </>\r\n  );\r\n}","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Button } from 'react-materialize';\r\n\r\nconst Overview = ({currentUser, contract, onCredit}) => {\r\n    const [deeds, setDeeds] = useState([]);\r\n  \r\n  useEffect(() => {\r\n      async function fetchData() {\r\n          const count = await contract.get_deeds_count();\r\n          const result = await contract.social_deeds(\r\n          {\r\n              creditor_id: currentUser.accountId,\r\n              from_index: \"0\",\r\n              limit: parseInt(count)\r\n          });\r\n          console.log(result);\r\n          setDeeds(splitArrayIntoChunksOfLen(result, 2));\r\n      }\r\n      \r\n      fetchData();\r\n  }, [contract, currentUser]);\r\n  \r\n  const splitArrayIntoChunksOfLen = (arr, len) => {\r\n    var chunks = [], i = 0, n = arr.length;\r\n    while (i < n) {\r\n      chunks.push(arr.slice(i, i += len));\r\n    }\r\n    return chunks;\r\n  }\r\n  \r\n   return <>\r\n                 <header>\r\n                   <h1>All deeds that were published.</h1>\r\n                 </header>\r\n                 \r\n                  {deeds.map(chunk => \r\n                  <div className=\"row\">\r\n                    {chunk.map(deed =>\r\n                      <div className=\"col s6\" key={deed.id}>\r\n                          <div className=\"card\">\r\n                            <div className=\"card-image\">\r\n                              <img src={deed.proof} alt={deed.proof}/>\r\n                            </div>\r\n                            <div className=\"card-title\">{deed.title}</div>\r\n                            <div className=\"card-content\">\r\n                              <p><b>Author: {deed.author}</b></p>\r\n                              <p>{deed.description}</p>\r\n                              <p>{deed.is_creditor}</p>\r\n                            </div>\r\n                            <div className=\"card-action\">\r\n                              <span className='important'>{deed.creditors}</span>\r\n                              {\r\n                                deed.is_creditor\r\n                                ?<Button small\r\n                                        tooltip=\"You already credited the author.\"\r\n                                        className=\"margin_button disabled\">\r\n                                  Credit\r\n                                </Button>\r\n                                : deed.author === currentUser.accountId\r\n                                  ? <Button small\r\n                                            tooltip=\"You cannot credit yourself.\"\r\n                                            className=\"margin_button disabled\">\r\n                                      Credit\r\n                                    </Button>\r\n                                  : <Button onClick={() => onCredit(deed)} small\r\n                                            tooltip=\"Give a credit to the deed author.\"\r\n                                            className=\"margin_button\">\r\n                                      Credit\r\n                                    </Button>\r\n                              }\r\n                            </div>\r\n                          </div>\r\n                      </div>)}          \r\n                  </div>)}\r\n          </>\r\n}\r\n\r\nOverview.propTypes = {\r\n  currentUser: PropTypes.shape({\r\n    accountId: PropTypes.string.isRequired,\r\n    balance: PropTypes.string.isRequired\r\n  }),\r\n  contract: PropTypes.shape({\r\n    get_deeds_count: PropTypes.func.isRequired,\r\n    social_deeds: PropTypes.func.isRequired\r\n  }).isRequired,\r\n};\r\n\r\nexport default Overview;","import React from 'react';\nimport { Button, TextInput } from 'react-materialize';\n\nexport default function Donate({onDonate}) {\n  return (\n    <>\n      <header>\n                   <h1>Donate NEAR.</h1>\n      </header>\n      <form onSubmit={onDonate}>\n        <fieldset id=\"fieldset\">\n            <p>Here you can donate NEAR.</p>\n            <p>\n                When you hit Donate the chosen amount of NEAR will be distributed to all DEED holders.\n                This excludes your own account as you are doing the donation. Secondly a new deed is \n                automatically created which shows that you donated the chosen amount.\n            </p>\n            <p className=\"highlight\">\n            <TextInput\n                autoComplete=\"off\"\n                id=\"donation\"\n                defaultValue={'1'}\n                max=\"100\"\n                min=\"1\"\n                step=\"1\"\n                type=\"number\"\n                label=\"Add the amount of Ⓝ you want to donate.\"\n                required\n            >\n            </TextInput>\n            </p>\n            <Button type=\"submit\" small\n                    tooltip=\"Donates the chosen amount of Ⓝ.\">\n              Donate\n            </Button>\n        </fieldset>\n      </form>\n    </>\n  );\n}","import React from 'react';\nimport { Button } from 'react-materialize';\n\nexport default function Register({onRegister}) {\n  return (\n    <>\n      <header>\n                   <h1>Social Bounty Hunt Homepage</h1>\n      </header>\n      <Button small onClick={onRegister}>Register</Button>\n      <p>\n          To use the DEED token you must be registered to the smart contract.\n          Without that you cannot use it. There is a small fee to pay for the \n          registration in order to pay for the used storage.\n      </p>\n      <p>\n          Go ahead and register to finally try the app!\n      </p>\n    </>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Big from 'big.js';\nimport SignIn from './components/SignIn';\nimport Layout from './layout';\nimport NotFound from './components/404.jsx';\nimport Dashboard from './components/Dashboard.jsx';\nimport Publish from './components/Publish.jsx';\nimport Overview from './components/Overview.jsx';\nimport Donate from './components/Donate.jsx';\nimport Register from './components/Register.jsx';\nimport 'materialize-css/dist/css/materialize.css'\nimport './App.css';\nimport { Route, Routes } from 'react-router-dom'\nvar version = require('../package.json').version;\nrequire('materialize-css');\n\nconst BOATLOAD_OF_GAS = Big(3).times(10 ** 13).toFixed();\n\nconst App = ({ contract, currentUser, nearConfig, wallet, provider, lastTransaction, error }) => {\n  const [message, setMessage] = useState('');\n  const [registered, setRegistered] = useState(false);\n\n  const onPublishDeed = async (e) => {\n    e.preventDefault();\n\n    const { fieldset, proof_prompt, title_prompt, description_prompt } = e.target.elements;\n    \n    fieldset.disabled = true;\n\n    contract.add_deed(\n      {\n        author: currentUser.accountId,\n        title: title_prompt.value,\n        description: description_prompt.value,\n        proof: proof_prompt.value\n      },\n      BOATLOAD_OF_GAS,\n      Big('0.01').times(10 ** 24).toFixed()\n    ).then((_) => {\n      console.log(\"Successfully published.\");\n    })\n  };\n\n  const onCredit = async (deed) => {\n    if(deed.is_creditor){\n      setMessage(`You already credited deed #${deed.id}`);\n      return;\n    }\n\n    contract.credit(\n      {\n        id: deed.id\n      },\n      BOATLOAD_OF_GAS,\n      Big('0.002').times(10 ** 24).toFixed()\n    ).then((_) => {\n      console.log(\"Successfully credited.\");\n    })\n  };\n\n  const onRegister = async (_) => {\n    const balance_bounds = await contract.storage_balance_bounds();\n    contract.storage_deposit(\n      {\n        account_id: currentUser.accountId,\n        registration_only: true\n      },\n      BOATLOAD_OF_GAS,\n      Big(balance_bounds.min).toFixed()\n    ).then((_) => {\n      console.log(\"Successfully registered.\");\n    })\n  };\n\n  const onDonate = async (e) => {\n    e.preventDefault();\n\n    const { fieldset, donation } = e.target.elements;\n    \n    fieldset.disabled = true;\n\n    contract.donate(\n      { },\n      BOATLOAD_OF_GAS,\n      Big(donation.value).times(10 ** 24).toFixed()\n    ).then((_) => {\n      console.log(\"Successfully donated.\");\n    })\n  };\n  \n  useEffect(() => {      \n    const fetchRegistered = async () => {\n      const isRegistered = await contract.is_registered({account_id: currentUser.accountId});\n      setRegistered(isRegistered);\n    }\n\n    fetchRegistered();\n  }, [contract, currentUser]);\n  \n  useEffect(() => {\n      if (error){\n        setMessage(decodeURI(error));\n        window.history.pushState({}, \"\", window.location.origin + window.location.pathname);\n      }\n      else if (lastTransaction) {          \n          setMessage(`Successfully executed transaction ${lastTransaction}`);\n          window.history.pushState({}, \"\", window.location.origin + window.location.pathname);\n      }\n  }, [lastTransaction, error]);\n  \n  const signIn = () => {\n    wallet.requestSignIn(\n      {contractId: nearConfig.contractName, methodNames: [contract.add_deed.name, contract.credit.name, contract.donate.name]}, //contract requesting access\n      'NEAR Challenge #5 - Social Bounty Hunt', //optional name\n      null, //optional URL to redirect to if the sign in was successful\n      null //optional URL to redirect to if the sign in was NOT successful\n    );\n  };\n\n  const signOut = () => {\n    wallet.signOut();\n    window.location.replace(window.location.origin + window.location.pathname);\n  };\n\n  const clearMessage = () => {\n    setMessage('');\n  };\n\n  return (\n    <Routes>\n      <Route path=\"/\" element={<Layout currentUser={currentUser} signIn={signIn} signOut={signOut} clearMessage={clearMessage} message={message}/>}>\n        <Route index element={\n          currentUser\n            ? registered\n                ? <Dashboard version={version} currentUser={currentUser}/>\n                : <Register onRegister={onRegister} />\n            : <SignIn signIn={signIn}/>\n        }/>\n        <Route path=\"publish\" element={\n          currentUser\n            ? registered\n                ? <Publish onPublishDeed={onPublishDeed}/>\n                : <Register onRegister={onRegister} />\n            : <SignIn signIn={signIn}/>\n        }/>\n        <Route path=\"overview\" element={\n          currentUser\n            ? registered\n                ? <Overview currentUser={currentUser} contract={contract} onCredit={onCredit}/>\n                : <Register onRegister={onRegister} />\n            : <SignIn signIn={signIn}/>\n        }/>\n        <Route path=\"donate\" element={\n          currentUser\n            ? registered\n                ? <Donate onDonate={onDonate}/>\n                : <Register onRegister={onRegister} />\n            : <SignIn signIn={signIn}/>\n        }/>\n        <Route path=\"*\" element={<NotFound/>}/>\n      </Route>\n    </Routes>\n  );\n}\n\nApp.propTypes = {\n  currentUser: PropTypes.shape({\n    accountId: PropTypes.string.isRequired,\n    balance: PropTypes.string.isRequired\n  }),\n  nearConfig: PropTypes.shape({\n    contractName: PropTypes.string.isRequired\n  }).isRequired,\n  wallet: PropTypes.shape({\n    requestSignIn: PropTypes.func.isRequired,\n    signOut: PropTypes.func.isRequired\n  }).isRequired\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router } from \"react-router-dom\";\nimport App from './App';\nimport getConfig from './config.js';\nimport * as nearAPI from 'near-api-js';\n\n// Initializing contract\nasync function initContract() {\n  \n  // get network configuration values from config.js\n  // based on the network ID we pass to getConfig()\n  const nearConfig = getConfig(process.env.NEAR_ENV || 'testnet');\n\n  // create a keyStore for signing transactions using the user's key\n  // which is located in the browser local storage after user logs in\n  const keyStore = new nearAPI.keyStores.BrowserLocalStorageKeyStore();\n\n  // Initializing connection to the NEAR testnet\n  const near = await nearAPI.connect({ keyStore, ...nearConfig });\n\n  // Initialize wallet connection\n  const walletConnection = new nearAPI.WalletConnection(near);\n\n  // Load in user's account data\n  let currentUser;\n  if (walletConnection.getAccountId()) {\n    currentUser = {\n      // Gets the accountId as a string\n      accountId: walletConnection.getAccountId(),\n      // Gets the user's token balance\n      balance: (await walletConnection.account().state()).amount,\n    };\n  }\n\n  // Initializing our contract APIs by contract name and configuration\n  const contract = await new nearAPI.Contract(\n    // User's accountId as a string\n    walletConnection.account(),\n    // accountId of the contract we will be loading\n    // NOTE: All contracts on NEAR are deployed to an account and\n    // accounts can only have one contract deployed to them.\n    nearConfig.contractName,\n    {\n      // View methods are read-only – they don't modify the state, but usually return some value\n      viewMethods: ['is_registered', 'storage_balance_bounds', 'get_deeds_count', 'social_deeds'],\n      // Change methods can modify the state, but you don't receive the returned value when called\n      changeMethods: ['storage_deposit', 'add_deed', 'credit', 'donate'],\n      // Sender is the account ID to initialize transactions.\n      // getAccountId() will return empty string if user is still unauthorized\n      sender: walletConnection.getAccountId(),\n    }\n  );\n  \n  const provider = near.connection.provider;\n  \n  return { contract, currentUser, nearConfig, walletConnection, provider };\n}\n\nwindow.nearInitPromise = initContract().then(\n  ({ contract, currentUser, nearConfig, walletConnection, provider }) => {\n    let urlParams = new URLSearchParams(window.location.search);\n    let lastTransaction;\n    if(urlParams.has('transactionHashes')){\n        lastTransaction = urlParams.get('transactionHashes');\n    }\n    let errorMessage;\n    if(urlParams.has('errorMessage')){\n        errorMessage = urlParams.get('errorMessage');\n    }\n    ReactDOM.render(\n\t  <Router>\n        <App\n          contract={contract}\n          currentUser={currentUser}\n          nearConfig={nearConfig}\n          wallet={walletConnection}\n          lastTransaction={lastTransaction}\n          provider={provider}\n          error={errorMessage}\n        />\n\t  </Router>,\n      document.getElementById('root')\n    );\n  }\n);\n\n","const CONTRACT_NAME = process.env.CONTRACT_NAME || 'social-bounty2.cryptosketches.testnet';\n\nfunction getConfig(env) {\n  switch(env) {\n    case 'production':\n    case 'mainnet':\n      return {\n        networkId: 'mainnet',\n        nodeUrl: 'https://rpc.mainnet.near.org',\n        contractName: CONTRACT_NAME,\n        walletUrl: 'https://wallet.near.org',\n        helperUrl: 'https://helper.mainnet.near.org'\n      };\n    case 'development':\n    case 'testnet':\n      return {\n        networkId: 'testnet',\n        nodeUrl: 'https://rpc.testnet.near.org',\n        contractName: CONTRACT_NAME,\n        walletUrl: 'https://wallet.testnet.near.org',\n        helperUrl: 'https://helper.testnet.near.org'\n      };\n    case 'betanet':\n      return {\n        networkId: 'betanet',\n        nodeUrl: 'https://rpc.betanet.near.org',\n        contractName: CONTRACT_NAME,\n        walletUrl: 'https://wallet.betanet.near.org',\n        helperUrl: 'https://helper.betanet.near.org'\n      };\n    case 'local':\n      return {\n        networkId: 'local',\n        nodeUrl: 'http://localhost:3030',\n        keyPath: `${process.env.HOME}/.near/validator_key.json`,\n        walletUrl: 'http://localhost:4000/wallet',\n        contractName: CONTRACT_NAME\n      };\n    case 'test':\n    case 'ci':\n      return {\n        networkId: 'shared-test',\n        nodeUrl: 'https://rpc.ci-testnet.near.org',\n        contractName: CONTRACT_NAME,\n        masterAccount: 'test.near'\n      };\n    case 'ci-betanet':\n      return {\n        networkId: 'shared-test-staging',\n        nodeUrl: 'https://rpc.ci-betanet.near.org',\n        contractName: CONTRACT_NAME,\n        masterAccount: 'test.near'\n      };\n    default:\n      throw Error(`Unconfigured environment '${env}'. Can be configured in src/config.js.`);\n  }\n}\n\nmodule.exports = getConfig;\n"],"sourceRoot":""}